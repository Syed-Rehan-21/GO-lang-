basePath: /api
definitions:
  models.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  models.ProductInput:
    properties:
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing products
  title: Product API
  version: "1.0"
paths:
  /products:
    get:
      description: Retrieves a list of all products in the inventory
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Adds a new product to the inventory
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      description: Deletes a product from the inventory
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Product not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a product
      tags:
      - products
    get:
      description: Retrieves a single product by its unique ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Product not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Updates an existing product in the inventory
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a product
      tags:
      - products
swagger: "2.0"
